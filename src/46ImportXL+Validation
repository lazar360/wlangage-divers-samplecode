PROCÉDURE PL_SURCLIC_VALIDER()
pPlanning est un xlsDocument
pPlanning = xlsOuvre(fRepExe + [fSep] + "Planning_2025.xlsx")

PL_VALIDER_XL(pPlanning)

HSupprimeTout(T_Planning)
HRAZ(T_Planning)
HSupprimeTout(MODEREGLEMENT)
HRAZ(MODEREGLEMENT)

pPlanning..Feuille = 1

POUR i=1 _À_ pPlanning..NombreLigne

	T_Planning.Ressource	= xlsDonnée(pPlanning,i,1)
	T_Planning.Titre		= xlsDonnée(pPlanning,i,2)

	// Conversion d'une date excel pour notre importation
	// On ajoute l'heure 00:00 pour la date de début et
	// 23:59 pour la date de fin
	sDate	est une chaîne		= xlsDonnée(pPlanning,i,3)
	dDate	est une DateHeure	= ChaîneVersDate(sDate) + "0000"
	T_Planning.DateDébut		= dDate

	sDate						= xlsDonnée(pPlanning,i,4)
	dDate						= ChaîneVersDate(sDate) + "2359"
	T_Planning.DateFin			= dDate

	T_Planning.NuméroSemaine	= xlsDonnée(pPlanning,i,5)
	T_Planning.Années			= xlsDonnée(pPlanning,i,6)

	MODEREGLEMENT.Libreglement	= xlsDonnée(pPlanning,i,7)

	HAjoute(T_Planning)
	HAjoute(MODEREGLEMENT)

FIN
ToastAffiche("IMPORT ok")
xlsFerme(pPlanning)

-------------------
// Excel à valider :
// Colonne 1 : texte
// Colonne 2 : texte
// Colonne 3 : date jj/mm/aaaaa
// Colonne 4 : date jj/mm/aaaaa
// Colonne 5 : numérique : chiffre 56
// Colonne 6 : numérique : année 2025
// Colonne 7 : texte
PROCÉDURE PL_VALIDER_XL(pDocument est un xlsDocument)

taBleauDesErreurs est un tableau associatif de chaîne

pDocument..Feuille = 1

SI pDocument..NombreLigne = 0 ALORS
	Erreur("Le document contient pas de ligne.")
	RETOUR
FIN

SI pDocument..NombreColonne = 0 ALORS
	Erreur("Le document contient pas de colonne.")
	RETOUR
FIN

// Identification des erreurs
POUR numéroDeLaLigne = 1 _À_ pDocument..NombreLigne
	POUR numéroColonne = 1 _À_ pDocument..NombreColonne

		// Le mauvais format
		// texte
		SI numéroColonne DANS (1, 2, 7) ALORS
			SI PAS RegexVérifie(SansEspace(SansAccent(xlsDonnée(pDocument, numéroDeLaLigne, numéroColonne))), "^[a-zA-Z\s]+$") ALORS
				taBleauDesErreurs[numéroDeLaLigne + " " + numéroColonne] = "Mauvais format pour un texte : " + xlsDonnée(pDocument, numéroDeLaLigne, numéroColonne)
			FIN
		FIN

		// date
		SI numéroColonne = 3 OU numéroColonne = 4 ALORS
			SI PAS RegexVérifie(xlsDonnée(pDocument, numéroDeLaLigne, numéroColonne), "^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/([0-9]{4})$") ALORS
				taBleauDesErreurs[numéroDeLaLigne + " " + numéroColonne] = "Mauvais format pour une date : " + xlsDonnée(pDocument, numéroDeLaLigne, numéroColonne)
			FIN
		FIN

		// Les cases vides sur le excel
		SI xlsDonnée(pDocument,numéroDeLaLigne,numéroColonne) = "" ALORS
			taBleauDesErreurs[numéroDeLaLigne + " " + numéroColonne] = "Case Vide"
		FIN

	FIN
FIN

// Affichage des erreurs
SI taBleauDesErreurs.Occurrence > 0 ALORS

	sRécapitulatifDesErreurs est une chaîne

	POUR TOUT typeErreur, numLigneColonne de taBleauDesErreurs
		sRécapitulatifDesErreurs += ChaîneConstruit("Ligne %1 - Colonne %2 : %3", ExtraitChaîne(numLigneColonne, 1, " "), ...
		ExtraitChaîne(numLigneColonne, 2, " "), typeErreur) + RC
	FIN

	Erreur(ChaîneConstruit("Le document contient les erreurs suivantes :" + RC +"%1",  sRécapitulatifDesErreurs))

FIN
